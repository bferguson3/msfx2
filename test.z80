fname "hw.com"
;
; Hello World .COM for MSX-DOS environment
;
; Compile:
;    java -jar glass.jar hellocom.asm hellocom.com
; Load from MSX-DOS with:
;    HELLOCOM
;
; Constant definitions
BDOS: equ 05H
_STROUT: equ 09H
_CONOUT: equ 02H
;WRTPSG:     equ $0093
RDPSG:      equ $0096
EXEBAS:     equ $4646
BDRCLR:     equ $F3EB
;EXPTBL: equ 0FCC1h
;CALSLT: equ 01Ch
TEMPVAR: equ $c000
COUNTER: equ $c001
REGLOOP: equ $c002
;GICINI: equ $0090

; Compilation address, standard MSX-DOS entry point
	org 100H

; Program code entry point
Execute:
     ; Made with MSFX2!
 ;  (Remember to reset channels after the desired
 ;   number of frames have passed.)
 ; Made with MSFX2!
 ;  (Remember to reset channels after the desired
 ;   number of frames have passed.)
 ; Made with MSFX2!
 ;  (Remember to reset channels after the desired
 ;   number of frames have passed.)
 ; Made with MSFX2!
 ;  (Remember to reset channels after the desired
 ;   number of frames have passed.)
 ; Made with MSFX2!
 ;  (Remember to reset channels after the desired
 ;   number of frames have passed.)
 ; Made with MSFX2!
 ;  (Remember to reset channels after the desired
 ;   number of frames have passed.)

GICINI: equ $0090
EXPTBL: equ $fcc1
CALSLT: equ $1c
WRTPSG: equ $0093

 ; Init PSG
   ld ix, GICINI
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Tone/Noise IO
   ld a, 7
   ld e, %10110111
   
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Volume setting
   ld a, 8
   ld e, 31
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT
   ld a, 9
   ld e, 31
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Channel 1 tone
   ld a, 0
   ld e, 124
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT
   ld a, 1
   ld e, 12
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Channel 2 tone
   ld a, 2
   ld e, 175
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT
   ld a, 3
   ld e, 4
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Noise frequency
   ld a, 6
   ld e, 1
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Envelope frequency
   ld a, 11
   ld e, 80
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT
   ld a, 12
   ld e, 27
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT

 ; Envelope shape
   ld a, 13
   ld e, %00001001
   ld ix, WRTPSG
   ld iy, [EXPTBL-1]
   call CALSLT



    ;; print all PSG registers 0-d
    xor a 
.reg_print:
    ld [REGLOOP], a 
    xor a 
    ld [TEMPVAR], a 
    ld a, [REGLOOP]
    ld ix,RDPSG
    ld iy,[EXPTBL-1]
    call CALSLT 
.break:
    call dos_printb_A
    ld a, [REGLOOP] 
    inc a 
    cp 14 
    jr z, .endreg_print
    jr .reg_print 
.endreg_print:
  ret


dos_printb_A:
;; same but for DOS
;; Clobbers A B C D E 
    ld [TEMPVAR], a 
    ld a, 8
    ld [COUNTER], a 
.printloop:
    ld [COUNTER], a 
    ld a, [TEMPVAR]
    sla a 
    jr c, .print1
    ld [TEMPVAR], a
    ld c, _CONOUT
    ld e, "0"
    call BDOS
    ld a, [COUNTER]
    dec a  
    jr nz, .printloop
  jr .endprint 
.print1:
    ld [TEMPVAR], a 
    ld c, _CONOUT 
    ld e, "1"
    call BDOS 
    ld a, [COUNTER] 
    dec a
    jr nz, .printloop 
.endprint:
    ld c, _STROUT
    ld de, newLine
    call BDOS 

  ret


newLine:
    db $0d, $0a, $24

;stringtest: EQU 1002H